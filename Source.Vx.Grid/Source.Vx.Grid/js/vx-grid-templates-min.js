!function(){"use strict";var e={vxGridTableStructure:'        <div class="vxH100 vx-grid-inner vx-grid-related " ng-class="{ \'vxXsViewEnabled\' : vxColSettings.xsViewEnabled == true}">            <div class="row hidden-xs">                <div class="col-xs-12">                    <div class="col-md-6 vsTableStats pull-left zeroPaddingLeft" ng-if="vxConfig.showGridStats">                        <p class="statTitle">All</p>                        <p class="statValue">{{getAllRowLength() | vxNumberFixedLen:2}}</p>                        <p class="statTitle" ng-class="{ \'disabled\' : multiBoxFilters.length == 0}">Filtered</p>                        <p class="statValue" ng-class="{ \'disabled\' : multiBoxFilters.length == 0}">                            <span ng-if="multiBoxFilters.length > 0">                                <span>{{vxConfig.vxFilteredData.length | vxNumberFixedLen:2}}</span>                            </span>                            <span ng-if="multiBoxFilters.length == 0">00</span>                        </p>                        <p class="statTitle" ng-class="{ \'disabled\' : vxColSettings.multiSelected.length == 0}">Selected</p>                        <p class="statValue" ng-class="{ \'disabled\' : vxColSettings.multiSelected.length == 0}" ng-if="vxConfig.hybrid == false">{{vxColSettings.multiSelected.length | vxNumberFixedLen:2}}</p>                        <p class="statValue" ng-class="{ \'disabled\' : vxColSettings.multiSelected.length == 0}" ng-if="vxConfig.hybrid == true" ng-attr-id="_vxMulLength{{vxConfig.id}}">00</p>                    </div>                    <div class="vxTableOperations pull-right zeroPaddingRight" ng-if="vxConfig.showGridOptions">                        <div class="search-container pull-left input-group">                            <input class="search form-control" type="search" ng-model="vxColSettings.searchToken" placeholder="Search" ng-keyup="keyUpSearch($event)" aria-label="search table">                        </div>                        <div class="icon-container pull-left" role="button" tabindex="0" ng-if="vxConfig.inlineEditingEnabled == true && vxConfig.inlineAddRowEnabled == true" ax-key="addNewRow()" aria-label="add new row">                            <i class="icon icon-add"></i>                        </div>                        <div class="icon-container pull-left" role="button" tabindex="{{editInProgressCount() == 0 ? -1 : 0}}" ng-if="vxConfig.inlineEditingEnabled == true && editInProgressCount() > 0" ng-class="{ \'disabled\' : editInProgressCount() == 0}" ax-key="revertEdits()" aria-label="revert edits" ax-disabled="editInProgressCount() == 0">                            <i class="icon icon-revert"></i>                        </div>                        <div class="icon-container pull-left" role="button" tabindex="0" ng-if="vxConfig.inlineEditingEnabled == true && vxConfig.inlineDeletingEnabled == true && vxColSettings.multiSelected.length > 0" ax-key="deleteRows()" aria-label="delete rows">                            <i class="icon icon-trash"></i>                        </div>                        <div class="icon-container pull-left" role="button" tabindex="{{vxColSettings.selectAllEnabled == false && vxConfig.multiSelectionEnabled == true ? -1 : 0}}" ng-class="{ \'disabled\' :vxColSettings.selectAllEnabled == false && vxConfig.multiSelectionEnabled == true}" ax-key="selectAllFiltered()" aria-label="select all filtered rows" ax-disabled="vxColSettings.selectAllEnabled == false && vxConfig.multiSelectionEnabled == true">                            <i class="icon icon-openwith"></i>                        </div>                        <div class="icon-container pull-left" role="button" tabindex="{{vxColSettings.multiSelected.length == 0 ? -1 : 0 }}" ng-class="{ \'disabled\' : vxColSettings.multiSelected.length == 0}" ax-key="clearSelection()" aria-label="clear any row selections" ax-disabled="vxColSettings.multiSelected.length == 0">                            <i class="icon icon-clearselection"></i>                        </div>                        <div class="icon-container pull-left" ng-class="{\'active\' : vxColSettings.revealWrapRowData }" ax-key="revealWrapToggle()" aria-label="toggle row content reveal">                            <i class="icon icon-more"></i>                        </div>                        <div class="icon-container pull-left" role="button" tabindex="{{multiBoxFilters.length == 0 ? -1 : 0}}" ng-class="{ \'disabled\' : multiBoxFilters.length == 0}" ax-key="clearFilters()" aria-label="clear any filters applied" ax-disabled="multiBoxFilters.length == 0">                            <i class="icon icon-refresh"></i>                        </div>                        <div class="icon-container pull-left" ng-class="{\'active\' : vxColSettings.menu }" ax-key="openManageColumns()" aria-label="open manage columns modal">                            <i class="icon icon-repair"></i>                        </div>                        <div class="icon-container pull-left" title="JSON Editor" role="button" tabindex="0" ng-class="{\'active\' : vxColSettings.menu }" ax-key="openJsonEditor()" ng-if="vxConfig.jsonEditorEnabled" aria-label="open json editor">                            <i class="icon icon-edit"></i>                        </div>                    </div>                </div>            </div>            <div class="col-xs-12 vxTableScrollContainer" ng-class="{ \'attrPaneOpen\': vxConfig.showGridStats || vxConfig.showGridOptions,\'pageEnabled\': vxColSettings.vxPageEnabled}">                <div class="col-xs-12 vxTableContainer ms-datatable ang-dt zeroPadding scrollDupHeader scrollDupHeaderAdded" ng-class="{\'settingsMenuOpen\': vxColSettings.menu, \'attrPaneOpen\': vxConfig.showGridStats || vxConfig.showGridOptions}" ng-style="{\'min-width\':getvxTableContainerWidth()}" ng-if="vxColSettings.xsViewEnabled == false">                    <div class="row marg0" role="region" aria-labelledby="{{vxConfig.id}}_tablemenu">                        <div class="col-xs-12 vxTableHolder pad0">                            <span class="offscreen" id="{{vxConfig.id}}_tablemenu">Column Menu for the grid {{vxConfig.caption}}</span>                            <table class="vxTable" role="presentation">                                <thead class="vxHead">                                    <tr class="vxHeadRow">                                        <th class="vxHeadRowCell" ng-repeat="header in vxConfig.columnDefConfigs" title="{{header.columnName}}" ng-class="{ \'ddEnabled\' : vxColSettings.dropdDownEnabled[header.id] == true}" tabindex="-1" ng-attr-id="{{vxConfig.id}}_vxHeadSt_{{$index}}" ng-if="header.hidden == false && vxColSettings.xsViewEnabled == false" ng-style="{ \'width\' : header.effectiveWidth + \'px\' }">                                            <div class="dropdown" data-container="body" ng-if="::header.renderHeadDefn == false" ng-class="{ \'open\' : vxColSettings.dropdDownOpen[header.id] == true}">                                                <!--<button class="btn btn-default dropdown-toggle" ng-attr-id="ddMenu_{{::header.id}}" ng-attr-aria-expanded="{{vxColSettings.dropdDownOpen[header.id] == true}}" ng-attr-tabindex="{{vxConfig.noData == false ? header.headTabIndex : -1}}" ng-click="headerClick(header, $event)" click-outside-header="outsideHeader(header)" check-click-outside="vxColSettings.dropdDownOpen[header.id]" ng-keydown="upDownKeyDownHandlerHeaderMenu($event)" ng-disabled="vxConfig.data.length == 0">-->                                                    <button class="btn btn-default dropdown-toggle" ng-attr-id="{{vxConfig.id}}_ddMenu_{{::header.id}}" ng-attr-aria-expanded="{{vxColSettings.dropdDownOpen[header.id] == true}}" ng-attr-tabindex="{{vxConfig.noData == false ? header.headTabIndex : -1}}" ng-click="headerClick(header, $event)" click-outside-header="outsideHeader(header)" check-click-outside="vxColSettings.dropdDownOpen[header.id]" ng-disabled="vxConfig.data.length == 0" ng-keydown="upDownKeyDownHandlerHeaderMenu($event, header.id)">                                                        <span class="colTitle">{{::header.columnName}}</span>                                                        <span class="offscreen">Column Press enter or spacebar to collapse or expand menu. </span>                                                        <span class="ddCaret" aria-hidden="true" ng-show="vxColSettings.colFiltersActivated[header.id] != true && vxColSettings.dropdDownEnabled[header.id] == true && vxConfig.data.length >= 1"><i class="icon icon-ScrollChevronDownLegacy white"></i></span>                                                        <span class="ddCaret" aria-hidden="true" ng-show="vxColSettings.colFiltersActivated[header.id] == true && vxColSettings.dropdDownEnabled[header.id] == true && vxConfig.data.length >= 1"><i class="icon icon-filter white"></i></span>                                                    </button>                                                <!--<ul class="dropdown-menu" aria-labelledby="ddMenu_{{::header.id}}" data-container="body" ng-keydown="upDowKeyDownHandlerHeaderMenuItems($event, header.id)">-->                                                    <ul class="dropdown-menu" aria-labelledby="ddMenu_{{::header.id}}" data-container="body" du-scroll-container="" id="{{vxConfig.id}}-dropdwon-menu-{{::header.id}}" ng-keydown="upDowKeyDownHandlerHeaderMenuItems($event, header.id)" ng-keyup="upDowKeyUpHandlerHeaderMenuItems($event, header.id)">                                                        <li tabindex="-1" class="loader" ng-if="vxColSettings.dropdDownLoaded[header.id] == false">                                                            <img class="dropDownLoader" ng-src="{{vxConfig.loaderGifSrc}}" alt="dropdown addition in progress">                                                        </li>                                                        <li tabindex="0" class="sorter" ng-if="vxColSettings.dropdDownLoaded[header.id] == true && vxColSettings.dropDownSort[header.id] == true" ax-key="sortClick(header)" ng-attr-id="{{vxConfig.id}}_{{header.id}}_sort">                                                            <span class="sortIndicator" ng-show="vxColSettings.reverse == false && vxColSettings.predicate == header.id"><i class="icon icon-up white"></i></span><span class="sortIndicator" ng-show="vxConfig.reverseSortDirection == true && vxConfig.sortPredicate == header.id"><i class="icon icon-down white"></i></span>Sort                                                        </li>                                                        <!-- UNSPPORTED IN HYBRID MODE-->                                                        <li tabindex="0" class="sorter" ng-if="vxColSettings.dropdDownLoaded[header.id] == true && vxColSettings.dropDownGroup[header.id] == true && vxColSettings.groupByColActivated[header.id] == false" ax-key="groupClick(header)" ng-attr-id="{{vxConfig.id}}_{{header.id}}_group">                                                            <span>Group</span>                                                        </li>                                                        <!-- UNSPPORTED IN HYBRID MODE-->                                                        <li tabindex="0" class="sorter" ng-if="vxColSettings.dropdDownLoaded[header.id] == true && vxColSettings.dropDownGroup[header.id] == true && vxColSettings.groupByColActivated[header.id] == true" ax-key="unGroupClick(header)" ng-attr-id="{{vxConfig.id}}_{{header.id}}_ungroup">                                                            <span>Ungroup</span>                                                        </li>                                                        <li class="filterClear" ng-if="vxColSettings.dropdDownLoaded[header.id] == true && vxColSettings.dropDownFilters[header.id] == true && vxColSettings.colFilterPairs[header.id].length > 0" ng-class="{ \'disabled\': vxColSettings.colFiltersActivated[header.id] == false && vxColSettings.filterSearchToken[header.id] == \'\'}" ax-key="filterClearClick(header)" ng-attr-id="{{vxConfig.id}}_{{header.id}}_clearfilters" ax-disabled="vxColSettings.colFiltersActivated[header.id] == false && vxColSettings.filterSearchToken[header.id] == \'\'" ng-attr-aria-hidden="{{(vxColSettings.colFiltersActivated[header.id] == false && vxColSettings.filterSearchToken[header.id] == \'\') ? true : false}}">                                                            <span class="indicator"><i class="icon icon-filter white"></i></span>Clear All Filters                                                        </li>                                                        <li class="filter-search" ng-if="vxColSettings.dropdDownLoaded[header.id] == true && vxColSettings.dropDownFilters[header.id] == true && header.ddFiltersWithSearch == true">                                                            <!--<input class="search-input" tabindex="0" type="search" placeholder="Search In Filters" aria-label="search for filters in column {{::header.columnName}}" ng-model="vxColSettings.enteredSearchToken[header.id]" ng-attr-id="{{::header.id}}_searchfilters_{{vxConfig.id}}" ng-change="filterTokenChnagedRapid(header.id)" />-->                                                            <input class="search-input" tabindex="0" type="search" placeholder="Search In Filters" aria-label="search for filters in column {{::header.columnName}}" ng-attr-id="{{::header.id}}_searchfilters_{{vxConfig.id}}">                                                            <div class="icon-container filter-activator" ax-key="filterAssignVar(header.id)" ng-attr-id="{{::header.id}}_invokesearchfilters_{{vxConfig.id}}" aria-label="invoke column filter action for column {{header.columnName}}">                                                                <i class="icon icon-search"></i>                                                            </div>                                                        </li>                                                        <li class="filter" ng-if="vxColSettings.dropdDownLoaded[header.id] == true && vxColSettings.dropDownFilters[header.id] == true" ng-repeat="filter in ((vxColSettings.colFilterPairs[header.id] | filter:{\'disabled\': false} | filter:vxColSettings.filterSearchToken[header.id]) | limitTo:header.filterLimit )" ng-attr-fl="{{header.filterLimit}}">                                                            <input class="filter-toggle" tabindex="0" type="checkbox" ng-model="vxColSettings.colFiltersStatus[filter.key]" ng-change="filterClick(header, filter)" ng-attr-id="{{vxConfig.id}}_{{::header.id}}_filter_{{$index}}"><label class="filterItemTitle" ng-attr-for="{{vxConfig.id}}_{{::header.id}}_filter_{{$index}}"><span ng-if="filter.filterDefnAvailable == false"><span class="offscreen">{{::header.columnName}} filter </span> {{::filter.name}}</span><span ng-if="filter.filterDefnAvailable == true" vx-compile="filter.filterDefn"></span></label>                                                        </li>                                                    </ul>                                            </div>                                            <div ng-if="header.renderHeadDefn == true" vx-compile="header.headerDefn"></div>                                        </th>                                    </tr>                                </thead>                            </table>                        </div>                    </div>                </div>                <div class="col-xs-12 vxTableContainer ms-datatable ang-dt zeroPadding scrollTableContainer" ng-class="{ \'settingsMenuOpen\': vxColSettings.menu, \'attrPaneOpen\': vxConfig.showGridStats || vxConfig.showGridOptions, \'pageEnabled\': vxColSettings.vxPageEnabled}" du-scroll-container="" style="margin-top:0;" ng-style="{\'min-width\':getvxTableContainerWidth()}" ng-attr-id="_vxScrollContainer{{vxConfig.id}}">                    <div class="row marg0">                        <div class="col-xs-12 vxTableHolder pad0">                            <div class="offscreen">                                <span class="offscreen" id="vx_row_edit"> Edit Row</span>                                <span class="offscreen" id="vx_row_save"> Save Row</span>                                <span class="offscreen" id="vx_row_sel_row">Select Row</span>                                <span class="offscreen" id="vx_row_sel_all_row">Select All Rows</span>                            </div>                            <table class="vxTable">                                <caption class="offscreen" ng-bind="vxConfig.caption"></caption>                                <thead class="vxHead">                                    <tr class="vxHeadRow">                                        <th class="vxHeadRowCell" ng-repeat="header in vxConfig.columnDefConfigs" ng-attr-id="{{vxConfig.id}}_vxHead_{{$index}}" ng-style="{ \'width\' : header.effectiveWidth + \'px\' }" ng-if="header.hidden == false && vxColSettings.xsViewEnabled == false" scope="col">                                            <span class="noDdTitle offscreen">{{::header.columnName}}</span>                                        </th>                                        <th class="vxHeadRowCell" ng-if="vxColSettings.xsViewEnabled == true">                                            <div class="search-container pull-left input-group">                                                <div class="searchSymb icon-container"><i class="icon icon-search"></i></div>                                                <input class="search form-control" type="search" ng-model="vxColSettings.xsSearch" placeholder="Search">                                            </div>                                            <div class="icon-container pull-right" role="button" tabindex="{{vxColSettings.xsSearch == \'\' ? -1 : 0}}" ng-class="{ \'disabled\' : vxColSettings.xsSearch == \'\'}" ax-key="xsReset()" ax-disabled="vxColSettings.xsSearch == \'\'">                                                <i class="icon icon-refresh"></i>                                            </div>                                            <div class="icon-container pull-right hidden-xs" role="button" tabindex="0" ng-class="{\'active\' : vxColSettings.menu }" ax-key="openManageColumns()">                                                <i class="icon icon-repair"></i>                                            </div>                                            <div class="icon-container pull-right" role="button" tabindex="{{vxColSettings.multiSelected.length == 0 ? -1 : 0 }}" ng-class="{ \'disabled\' : vxColSettings.multiSelected.length == 0}" ax-key="clearSelection()" ng-if="vxConfig.selectionEnabled" ax-disabled="vxColSettings.multiSelected.length == 0">                                                <i class="icon icon-clearselection"></i>                                            </div>                                            <div class="icon-container pull-right" role="button" tabindex="{{vxColSettings.selectAllEnabled == false && vxConfig.multiSelectionEnabled == true ? -1 : 0}}" ng-class="{ \'disabled\' :vxColSettings.selectAllEnabled == false && vxConfig.multiSelectionEnabled == true}" ax-key="selectAllFiltered()" ng-if="vxConfig.selectionEnabled" ax-disabled="vxColSettings.selectAllEnabled == false && vxConfig.multiSelectionEnabled == true">                                                <i class="icon icon-openwith"></i>                                            </div>                                        </th>                                    </tr>                                </thead>                                <tbody class="vxBody" vs-repeat="" vs-options="{latch: true}" vs-scroll-parent="{{scrollParent}}" vs-excess="{{vxConfig.latchExcess}}" ng-class="{ \'revealWrap\' : vxColSettings.revealWrapRowData }" ng-if="vxConfig.hybrid == false && vxConfig.bindOnce == false && vxConfig.virtualization == true">                                    <tr vx-edit-focus-disable="vxColSettings.saveInProgress[row[vxColSettings.primaryId]]" ng-attr-id="{{row[vxColSettings.primaryId]}}" class="{{vxColSettings.vxRowClass[row[vxColSettings.primaryId]]}} {{vxConfig.rowClassFn(row)}} vxBodyRow" ng-repeat="row in ( vxConfig.vxFilteredData = (vxConfig.vxData | filter:vxColSettings.xsSearch | vxGridMultiBoxFilters: multiBoxFilters | orderBy:vxConfig.sortPredicateFn:vxConfig.reverseSortDirection))" ng-init="rowId = row[vxColSettings.primaryId]" ng-class="{ \'vxRowSelected\' : vxColSettings.rowSelected[row[vxColSettings.primaryId]], \'inProgress\': vxColSettings.saveInProgress[row[vxColSettings.primaryId]]}" ng-include="\'template/vx-grid/vx-grid-row-tmpl.html\'"></tr>                                </tbody>                                <tbody class="vxBody" ng-class="{ \'revealWrap\' : vxColSettings.revealWrapRowData }" ng-if="vxConfig.hybrid == false && vxConfig.bindOnce == false && vxConfig.virtualization == false">                                    <tr vx-edit-focus-disable="vxColSettings.saveInProgress[row[vxColSettings.primaryId]]" ng-attr-id="{{row[vxColSettings.primaryId]}}" class="{{vxColSettings.vxRowClass[row[vxColSettings.primaryId]]}} {{vxConfig.rowClassFn(row)}} vxBodyRow" ng-repeat="row in ( vxConfig.vxFilteredData = (vxConfig.vxData | filter:vxColSettings.xsSearch | vxGridMultiBoxFilters: multiBoxFilters | orderBy:vxConfig.sortPredicateFn:vxConfig.reverseSortDirection) | vxStartFrom: vxColSettings.vxPageStartPosition | limitTo:vxConfig.pageLength )" ng-init="rowId = row[vxColSettings.primaryId]" ng-class="{ \'vxRowSelected\' : vxColSettings.rowSelected[row[vxColSettings.primaryId]], \'inProgress\': vxColSettings.saveInProgress[row[vxColSettings.primaryId]]}" ng-include="\'template/vx-grid/vx-grid-row-tmpl.html\'"></tr>                                </tbody>                                <!-- vxConfig.bindOnce == true -->                                <tbody class="vxBody" vs-repeat="" vs-options="{latch: true}" vs-scroll-parent="{{scrollParent}}" vs-excess="{{vxConfig.latchExcess}}" ng-class="{ \'revealWrap\' : vxColSettings.revealWrapRowData }" ng-if="vxConfig.hybrid == false && vxConfig.bindOnce == true && vxConfig.virtualization == true">                                    <tr vx-edit-focus-disable="vxColSettings.saveInProgress[row[vxColSettings.primaryId]]" ng-attr-id="{{::row[vxColSettings.primaryId]}}" class="{{vxColSettings.vxRowClass[row[vxColSettings.primaryId]]}} {{vxConfig.rowClassFn(row)}} vxBodyRow" ng-repeat="row in ( vxConfig.vxFilteredData = (vxConfig.vxData | filter:vxColSettings.xsSearch | vxGridMultiBoxFilters: multiBoxFilters | orderBy:vxConfig.sortPredicateFn:vxConfig.reverseSortDirection))" ng-class="{ \'vxRowSelected\' : vxColSettings.rowSelected[row[vxColSettings.primaryId]], \'inProgress\': vxColSettings.saveInProgress[row[vxColSettings.primaryId]]}" ng-init="rowId = row[vxColSettings.primaryId]" ng-include="\'template/vx-grid/vx-grid-row-tmpl-bindonce.html\'"></tr>                                </tbody>                                <tbody class="vxBody" ng-class="{ \'revealWrap\' : vxColSettings.revealWrapRowData }" ng-if="vxConfig.hybrid == false && vxConfig.bindOnce == true && vxConfig.virtualization == false">                                    <tr vx-edit-focus-disable="vxColSettings.saveInProgress[row[vxColSettings.primaryId]]" ng-attr-id="{{::row[vxColSettings.primaryId]}}" class="{{vxColSettings.vxRowClass[row[vxColSettings.primaryId]]}} {{vxConfig.rowClassFn(row)}} vxBodyRow" ng-repeat="row in ( vxConfig.vxFilteredData = (vxConfig.vxData | filter:vxColSettings.xsSearch | vxGridMultiBoxFilters: multiBoxFilters | orderBy:vxConfig.sortPredicateFn:vxConfig.reverseSortDirection) | vxStartFrom: vxColSettings.vxPageStartPosition | limitTo:vxConfig.pageLength)" ng-class="{ \'vxRowSelected\' : vxColSettings.rowSelected[row[vxColSettings.primaryId]], \'inProgress\': vxColSettings.saveInProgress[row[vxColSettings.primaryId]]}" ng-init="rowId = row[vxColSettings.primaryId]" ng-include="\'template/vx-grid/vx-grid-row-tmpl-bindonce.html\'"></tr>                                    <tr ng-attr-id="{{::row[vxColSettings.primaryId]}}" class="{{vxColSettings.vxRowClass[row[vxColSettings.primaryId]]}} {{vxConfig.rowClassFn(row)}} vxBodyRow"></tr>                                </tbody>                                <tbody class="vxBody" ng-class="{ \'revealWrap\' : vxColSettings.revealWrapRowData }" ng-if="vxConfig.hybrid == true" ng-attr-id="_vxHybrid{{vxConfig.id}}"></tbody>                            </table>                                                    </div>                    </div>                </div>            </div>            <div class="col-xs-12 vxTablePagination pad0" ng-if="vxColSettings.vxPageEnabled">                <div class="icon-container dirNumContainer" ax-key="activatePage(vxColSettings.activePage - 1)" ng-class="{ \'disabled\' :vxColSettings.activePage == 0}" ax-disabled="vxColSettings.activePage == 0">                    <i class="icon icon-previous" aria-hidden="true"></i><span class="offscreen">Previous Page</span>                </div>                <div class="icon-container dirNumContainer" ax-key="activatePage(vxColSettings.activePage + 1)" ng-class="{ \'disabled\' :vxColSettings.activePage == vxColSettings.pages.length - 1}" ax-disabled="vxColSettings.activePage == vxColSettings.pages.length - 1">                    <i class="icon icon-next" aria-hidden="true"></i><span class="offscreen">Next Page</span>                </div>                <div class="icon-container pageNumContainer" ng-repeat="pageNum in vxColSettings.pages" ax-key="activatePage(pageNum)" ng-class="{\'active\' : pageNum == vxColSettings.activePage}">                    <span class="offscreen">Page </span><i class="icon">{{pageNum + 1}}</i>                </div>            </div>            <div class="icon-container scrollAction up" role="button" tabindex="0" ax-key="justScrollTop()" ng-class="{\'pageEnabled\': vxColSettings.vxPageEnabled}" ng-show="showScrollUpArrow()" aria-label="Scroll Up">                <i class="icon icon-up"></i>            </div>            <div class="icon-container scrollAction down" role="button" tabindex="0" ax-key="justScrollDown()" ng-class="{\'pageEnabled\': vxColSettings.vxPageEnabled}" ng-show="showScrollDownArrow()" aria-label="Scroll Down">                <i class="icon icon-up down"></i>            </div>        </div>    ',vxGridManageColumnsModal:'        <div class="modal-body vx-grid-related ">            <div class="vxTableSettings">                <div class="vxSettingsHead">                    <label class="title">Manage Columns</label>                    <div class="icon-container" role="button" tabindex="0" ax-key="cancelChangeInConfig()" aria-label="Cancel Changes in Config">                        <i class="icon icon-close" aria-hidden="true"></i>                    </div>                </div>                <div class="vxSettingsBody">                    <div class="col-xs-12 zeroPadding vxH100">                        <div class="col-xs-3 vxH100 visHideRows">                            <div class="row vxH100">                                <div class="col-xs-12 columns">                                    <label class="help">Available Columns</label>                                    <p class="helpText">Select a column use the left and right arrows to change column visibility.</p>                                    <div class="col-xs-12 colItem" tabindex="{{header.locked == false ? 0 : -1}}" ng-repeat="header in copyForWidthVisChange" ng-class="{ \'locked\': header.locked, \'selected\': header.id == headerSelected.id}" ax-key="selectHeader(header)" ng-if="header.hidden == true" ng-keydown="upDownKeyPressHandler($event)">                                        <div class="col-xs-2 col-sm-2 col-md-1">                                            <label class="colLabel xl" ng-if="header.visbilityLocked == true"><i class="icon icon-blockedLegacy" tooltip="Visbility Locked"></i></label>                                        </div>                                        <label class="col-xs-10 col-sm-10 col-md-10 colName">{{::header.columnName}}</label>                                        <div class="clearfix"></div>                                    </div>                                    <div class="clearfix"></div>                                </div>                                <div class="clearfix"></div>                            </div>                        </div>                        <div class="col-xs-1 vxH100 visChangers">                            <div class="col-xs-12 visChangersContainer">                                <div class="col-xs-12 visChangersItem zeroPadding">                                    <div class="icon-container" role="button" tabindex="{{headerSelected.visbilityLocked || headerSelected == null || headerSelected.hidden == false ? -1 : 0}}" ng-class="{\'disabled\' : headerSelected.visbilityLocked || headerSelected == null || headerSelected.hidden == false}" ax-key="makeVisible(headerSelected)" ng-keydown="upDownKeyPressHandler($event)" ng-attr-aria-label="Make Column {{headerSelected.columnName}} Visible" ax-disabled="headerSelected.visbilityLocked || headerSelected == null || headerSelected.hidden == false">                                        <i class="icon icon-right"></i>                                    </div>                                    <div class="icon-container" role="button" tabindex="{{headerSelected.visbilityLocked || headerSelected == null || headerSelected.hidden == true ? -1 : 0}}" ng-class="{\'disabled\' : headerSelected.visbilityLocked || headerSelected == null || headerSelected.hidden == true}" ax-key="makeHidden(headerSelected)" ng-keydown="upDownKeyPressHandler($event)" ng-attr-aria-label="Make Column {{headerSelected.columnName}} Hidden" ax-disabled="headerSelected.visbilityLocked || headerSelected == null || headerSelected.hidden == true">                                        <i class="icon icon-left"></i>                                    </div>                                </div>                                <div class="clearfix"></div>                            </div>                        </div>                        <div class="col-xs-7 vxH100">                            <div class="row orderChanger">                                <div class="col-xs-12 columns">                                    <label class="help">Selected Columns</label>                                    <p class="helpText">Select a column and use the up and down arrows to change column order.</p>                                    <div class="col-xs-12 colItem" tabindex="{{header.locked == true || (header.locked == false && header.visbilityLocked == true && header.orderLocked == true) ? -1 : 0}}" ng-repeat="header in copyForWidthVisChange | orderBy: \'order\'" ng-class="{ \'locked\': header.locked, \'selected\': header.id == headerSelected.id}" ax-key="selectHeader(header)" ng-if="header.hidden == false" ng-keydown="upDownKeyPressHandler($event)">                                        <div class="col-xs-12 col-sm-6 col-md-2 padA0L10R0">                                            <div class="col-xs-4 pad0">                                                <label class="colLabel xl" ng-if="header.visbilityLocked == true"><span class="icon icon-blockedLegacy red" tooltip="Visbility Locked"></span></label>                                            </div>                                            <div class="col-xs-4 pad0">                                                <label class="colLabel xl" ng-if="header.orderLocked == true"><span class="icon icon-unpin red" tooltip="Order Locked"></span></label>                                            </div>                                            <div class="col-xs-4 pad0">                                                <label class="colLabel xl" ng-if="header.widthLocked == true"><span class="icon icon-trim red" tooltip="Width Locked"></span></label>                                            </div>                                        </div>                                        <label class="col-xs-12 col-sm-12 col-md-4 colName">{{::header.columnName}}</label>                                        <div class="col-xs-12 col-sm-6 col-md-6">                                            <label class="colLabel" ng-attr-for="_mc_{{header.id}}">Width <span class="offscreen"> for column {{::header.columnName}}</span> (in approx. char)</label>                                            <input class="inputStyle colInput" ng-model="header.chars" ng-disabled="header.widthLocked" ng-change="widthChanged(header)" ng-attr-id="_mc_{{header.id}}">                                        </div>                                        <div class="clearfix"></div>                                    </div>                                    <div class="clearfix"></div>                                </div>                                <div class="clearfix"></div>                            </div>                        </div>                        <div class="col-xs-1 vxH100 visChangers">                            <div class="col-xs-12 visChangersContainer">                                <div class="col-xs-12 visChangersItem zeroPadding">                                    <div class="icon-container" role="button" tabindex="{{headerSelected.orderLocked || headerSelected.hidden || headerSelected == null ? -1 : 0}}" ng-class="{\'disabled\' : headerSelected.orderLocked || headerSelected.hidden || headerSelected == null}" ax-key="swapAbove(headerSelected)" ng-keydown="upDownKeyPressHandler($event)" ng-attr-aria-label="Move Column {{headerSelected.columnName}} Up" ax-disabled="headerSelected.orderLocked || headerSelected.hidden || headerSelected == null">                                        <i class="icon icon-up"></i>                                    </div>                                    <div class="icon-container" role="button" tabindex="{{headerSelected.orderLocked || headerSelected.hidden || headerSelected == null ? -1 : 0}}" ng-class="{\'disabled\' : headerSelected.orderLocked || headerSelected.hidden || headerSelected == null}" ax-key="swapBelow(headerSelected)" ng-keydown="upDownKeyPressHandler($event)" ng-attr-aria-label="Move Column {{headerSelected.columnName}} Down" ax-disabled="headerSelected.orderLocked || headerSelected.hidden || headerSelected == null">                                        <i class="icon icon-down"></i>                                    </div>                                </div>                                <div class="clearfix"></div>                            </div>                            <div class="clearfix"></div>                        </div>                    </div>                </div>                <div class="vxSettingsFooter">                    <button class="btn btn-primary vsTableButton active" ax-key="saveChangeInConfig()">Save</button>                    <button class="btn btn-primary vsTableButton" ax-key="cancelChangeInConfig()">Cancel</button>                    <div class="infoBtns">                        <span class="icon icon-blockedLegacy"></span>                        <span class="infoLabel">Visbility Locked,</span>                        <span class="icon icon-unpin"></span>                        <span class="infoLabel">Order Locked,</span>                        <span class="icon icon-trim"></span>                        <span class="infoLabel">Width Locked</span>                    </div>                </div>            </div>        </div>    ',
"vxGridJsonEditorModal vx-grid-related ":'        <div class="modal-body">            <div class="vxTableSettings">                <div class="vxSettingsHead">                    <label class="title">JSON editor for changing grid data</label>                    <div class="icon-container" role="button" tabindex="0" ax-key="cancelChangeInConfig()">                        <i class="icon icon-close"></i>                    </div>                </div>                <div class="vxSettingsBody">                    <div class="col-xs-12 zeroPadding vxH100">                        <div class="col-xs-12 vxH100 visHideRows">                            <json-editor on-change="onChangeJSON(json)" options="jsonOptions" json-data="data"></json-editor>                        </div>                    </div>                </div>                <div class="vxSettingsFooter">                    <button class="btn btn-primary vsTableButton active" ax-key="saveChangeInConfig()">Save</button>                    <button class="btn btn-primary vsTableButton" ax-key="cancelChangeInConfig()">Cancel</button>                </div>            </div>        </div>    ',vxGridRowTmpl:'        <td colspan="{{getNonHiddenColCount()}}" ng-if="row.fillEmptyElement == true" style="padding-left:15px;"><span ng-bind-html="vxConfig.emptyFill"></span></td>        <td class="vxBodyRowCell {{header.colClass}}" ng-class="{\'renderedDefn\': header.renderDefn == true}" ng-repeat="header in vxConfig.columnDefConfigs" ng-style="::{ \'width\' : header.effectiveWidth + \'px\' }" ng-if="header.hidden == false && row.type != \'groupRow\' && vxColSettings.xsViewEnabled == false && !(row.fillEmptyElement == true)" ng-attr-scope="{{header.scopeIsRow == true ? \'row\': \'\'}}">            <span ng-show="header.columnIsDate != true && header.columnIsRowSelect != true && header.columnIsRowEdit != true && ((header.renderDefn == false && vxColSettings.inlineEditState[row[vxColSettings.primaryId]] != true) || (header.renderDefn == false && header.inlineEditOnColumnEnabled == false))" title="{{row[header.id]}}">{{row[header.id]}}</span>            <div ng-if="header.columnIsDate != true && header.columnIsRowSelect != true && header.columnIsRowEdit != true && ((header.renderDefn == true && vxColSettings.inlineEditState[row[vxColSettings.primaryId]] != true) || (header.renderDefn == true && header.inlineEditOnColumnEnabled == false))" vx-compile-clone-link="header.cellDefn"></div>            <div ng-if="header.columnIsDate != true && header.columnIsRowSelect != true && header.columnIsRowEdit != true && vxColSettings.inlineEditState[row[vxColSettings.primaryId]] == true && header.inlineEditOnColumnEnabled == true" vx-compile-clone-link="header.editDefn"></div>            <div ng-if="header.columnIsRowSelect == true">                <div class="vx-row-select">                    <input class="vx-row-select-toggle" type="checkbox" ng-model="vxColSettings.rowSelected[rowId]" ng-change="rowSelectionChanged(rowId)" ng-disabled="vxColSettings.vxRowSelectionDisable[rowId]" ng-attr-id="vx_row-sel_in{{rowId}}" aria-labelledby="vx_row_sel_row vx_row_sel_{{rowId}}">                    <span class="offscreen" style="visibility:collapse;" ng-attr-id="vx_row_sel_{{rowId}}">{{rowId}}</span>                </div>            </div>            <div class="vx-row-edit-container" ng-if="header.columnIsRowEdit == true">                <div class="vx-row-edit icon-container" tabindex="0" ax-key="editRow(rowId)" ng-show="vxColSettings.inlineEditState[rowId] == false && vxColSettings.saveInProgress[rowId] != true" role="button" aria-labelledby="vx_row_edit vx_row_sel_{{rowId}}">                    <i class="icon icon-edit"></i>                </div>                <div class="vx-row-edit icon-container" ax-disabled="vxConfig.invalidRows[row[vxColSettings.primaryId]]" tabindex="0" ax-key="saveRow(rowId)" ng-show="vxColSettings.inlineEditState[rowId] == true && vxColSettings.saveInProgress[rowId] != true" role="button" aria-labelledby="vx_row_save vx_row_sel_{{rowId}}">                    <i class="icon icon-save"></i>                </div>                <div class="vx-row-edit icon-container loader" tabindex="0" ng-show="vxColSettings.saveInProgress[rowId] == true" role="button" aria-labelledby="vx_row_sel_row vx_row_sel_{{rowId}}">                    <img class="loader-row" ng-src="{{vxConfig.loaderGifSrc}}">                </div>            </div>            <span ng-show="header.columnIsDate == true">{{row[header.id] | date : header.columnDatePipe}}</span>        </td>        <td class="vxBodyRowCell xsCell" ng-if="vxColSettings.xsViewEnabled == true && !(row.fillEmptyElement == true)" ng-class="{ \'rowSelectionEnabled\': vxConfig.selectionEnabled == true }">            <div class="xsSelectionHolder" vx-compile-clone-link="vxConfig.columnDefConfigs[0].cellDefn" ng-if="vxConfig.selectionEnabled"></div>            <div class="xsRowTitleHolder" ax-key="row.xsViewDetails = !row.xsViewDetails">                <span ng-if="vxColSettings.xsRowTitleTemplateAvailable == false">{{row[vxColSettings.primaryId]}}</span>                <div ng-if="vxColSettings.xsRowTitleTemplateAvailable == true" vx-compile="vxConfig.xsRowTitleTemplate"></div>            </div>            <div class="xsRowViewToggleHolder" ax-key="row.xsViewDetails = !row.xsViewDetails">                <div class="icon-container">                    <i class="icon icon-ScrollChevronUpLegacy" ng-show="row.xsViewDetails"></i>                    <i class="icon icon-ScrollChevronDownLegacy" ng-show="!row.xsViewDetails"></i>                </div>            </div>            <div class="col-xs-12 xsCellContentHolder" collapse="!row.xsViewDetails">                <div class="xsCellContent" ng-repeat="header in vxConfig.columnDefConfigs" ng-if="$index > 0 && header.xsHidden == false && row.type != \'groupRow\'">                    <div class="col-xs-12 xsCellHeader">{{header.columnName}}</div>                    <div class="col-xs-12 xsCellValue">                        <span ng-if="header.renderDefn == false">{{row[header.id]}}</span>                        <div ng-if="header.renderDefn == true" vx-compile-clone-link="header.cellDefn"></div>                    </div>                    <div class="clearfix"></div>                </div>            </div>        </td>    ',vxGridRowTmplBindonce:'        <td colspan="{{::getNonHiddenColCount()}}" ng-if="::row.fillEmptyElement == true" style="padding-left:15px;"><span ng-bind-html="vxConfig.emptyFill"></span></td>        <td class="vxBodyRowCell {{::header.colClass}}" ng-class="::{\'renderedDefn\': header.renderDefn == true}" ng-repeat="header in vxConfig.columnDefConfigs" ng-style="::{ \'width\' : header.effectiveWidth + \'px\' }" ng-if="::header.hidden == false && row.type != \'groupRow\' && vxColSettings.xsViewEnabled == false && !(row.fillEmptyElement == true)" ng-attr-scope="{{header.scopeIsRow == true ? \'row\': \'\'}}">            <span ng-show="::header.columnIsDate != true && header.columnIsRowSelect != true && header.columnIsRowEdit != true && ((header.renderDefn == false && vxColSettings.inlineEditState[row[vxColSettings.primaryId]] != true) || (header.renderDefn == false && header.inlineEditOnColumnEnabled == false))" title="{{::row[header.id]}}">{{::row[header.id]}}</span>            <div ng-if="::header.columnIsDate != true && header.columnIsRowSelect != true && header.columnIsRowEdit != true && ((header.renderDefn == true && vxColSettings.inlineEditState[row[vxColSettings.primaryId]] != true) || (header.renderDefn == true && header.inlineEditOnColumnEnabled == false))" vx-compile-clone-link="header.cellDefn"></div>            <div ng-if="::header.columnIsDate != true && header.columnIsRowSelect != true && header.columnIsRowEdit != true && vxColSettings.inlineEditState[row[vxColSettings.primaryId]] == true && header.inlineEditOnColumnEnabled == true" vx-compile-clone-link="header.editDefn"></div>            <div ng-if="::header.columnIsRowSelect == true">                <div class="vx-row-select">                    <input class="vx-row-select-toggle" type="checkbox" ng-model="vxColSettings.rowSelected[rowId]" ng-change="rowSelectionChanged(rowId)" ng-disabled="vxColSettings.vxRowSelectionDisable[rowId]" ng-attr-id="vx_row-sel_in{{::rowId}}" aria-labelledby="vx_row_sel_row vx_row_sel_{{::rowId}}">                    <span class="offscreen" style="visibility:collapse;" ng-attr-id="vx_row_sel_{{rowId}}">{{rowId}}</span>                </div>            </div>            <div class="vx-row-edit-container" ng-if="::header.columnIsRowEdit == true">                <div class="vx-row-edit icon-container" tabindex="0" ax-key="editRow(rowId)" ng-show="vxColSettings.inlineEditState[rowId] == false && vxColSettings.saveInProgress[rowId] != true" role="button" aria-labelledby="vx_row_edit vx_row_sel_{{::rowId}}">                    <i class="icon icon-edit"></i>                </div>                <div class="vx-row-edit icon-container" ax-disabled="vxConfig.invalidRows[row[vxColSettings.primaryId]]" tabindex="0" ax-key="saveRow(rowId)" ng-show="vxColSettings.inlineEditState[rowId] == true && vxColSettings.saveInProgress[rowId] != true" role="button" aria-labelledby="vx_row_save vx_row_sel_{{::rowId}}">                    <i class="icon icon-save"></i>                </div>                <div class="vx-row-edit icon-container loader" tabindex="0" ng-show="vxColSettings.saveInProgress[rowId] == true" role="button" aria-labelledby="vx_row_sel_row vx_row_sel_{{::rowId}}">                    <img class="loader-row" ng-src="{{::vxConfig.loaderGifSrc}}">                </div>            </div>            <span ng-show="::header.columnIsDate == true">{{::row[header.id] | date : header.columnDatePipe}}</span>        </td>        <td class="vxBodyRowCell groupCell" ng-if="::row.type == \'groupRow\' && !(row.fillEmptyElement == true)" colspan="1">            <div vx-compile="row.cellDefn"></div>        </td>        <td class="vxBodyRowCell groupCell" ng-if="::row.type == \'groupRow\'  && !(row.fillEmptyElement == true)" colspan="{{getVisibleHeaderCounts() - 1}}">            <span class="first">GROUPED BY {{row.colName}} : </span><span class="colname">{{row.value}}</span>        </td>    '};angular.module("vx.grid.modules").run(["$templateCache",function(i){i.put("template/vx-grid/vx-grid-json-editor-modal.html",e.vxGridJsonEditorModal),i.put("template/vx-grid/vx-grid-manage-columns-modal.html",e.vxGridManageColumnsModal),i.put("template/vx-grid/vx-grid.html",e.vxGridTableStructure),i.put("template/vx-grid/vx-grid-row-tmpl.html",e.vxGridRowTmpl),i.put("template/vx-grid/vx-grid-row-tmpl-bindonce.html",e.vxGridRowTmplBindonce)}])}();